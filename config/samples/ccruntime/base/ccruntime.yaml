apiVersion: confidentialcontainers.org/v1beta1
kind: CcRuntime
metadata:
  name: ccruntime
spec:
  # Add fields here
  runtimeName: kata
  ccNodeSelector:
    matchLabels:
      node.kubernetes.io/worker: ""
  config:
    installType: bundle
    payloadImage: quay.io/kata-containers/kata-deploy:stable
    installDoneLabel:
      katacontainers.io/kata-runtime: "true"
    uninstallDoneLabel:
      katacontainers.io/kata-runtime: "cleanup"
    installerVolumeMounts:
      - mountPath: /etc/crio/
        name: crio-conf
      - mountPath: /etc/containerd/
        name: containerd-conf
      - mountPath: /opt/kata/
        name: kata-artifacts
      - mountPath: /usr/local/bin/
        name: local-bin
      - mountPath: /opt/snapshotter/bin/
        name: opt-bin
      - mountPath: /opt/snapshotter/sbin/
        name: opt-sbin
    installerVolumes:
      - hostPath:
          path: /etc/crio/
          type: ""
        name: crio-conf
      - hostPath:
          path: /etc/containerd/
          type: ""
        name: containerd-conf
      - hostPath:
          path: /opt/kata/
          type: DirectoryOrCreate
        name: kata-artifacts
      - hostPath:
          path: /usr/local/bin/
          type: ""
        name: local-bin
      - hostPath:
          path: /usr/bin/
          type: ""
        name: opt-bin
      - hostPath:
          path: /usr/sbin/
          type: ""
        name: opt-sbin
    installCmd: ["/opt/kata-artifacts/scripts/kata-deploy.sh", "install"]
    uninstallCmd: ["/opt/kata-artifacts/scripts/kata-deploy.sh", "cleanup"]
    cleanupCmd: ["/opt/kata-artifacts/scripts/kata-deploy.sh", "reset"]
    # Uncomment and add the required RuntimeClasses to be created
    # If this is commented, then the operator creates 3 default runtimeclasses "kata", "kata-clh", "kata-qemu"
    runtimeClasses: 
      []
    postUninstall:
      image: quay.io/confidential-containers/reqs-payload
      volumeMounts:
        - mountPath: /opt/confidential-containers/
          name: confidential-containers-artifacts
        - mountPath: /etc/systemd/system/
          name: etc-systemd-system
        - mountPath: /etc/containerd/
          name: containerd-conf
        - mountPath: /usr/local/bin/
          name: local-bin
        - mountPath: /opt/snapshotter/bin/
          name: opt-bin
        - mountPath: /opt/snapshotter/sbin/
          name: opt-sbin
        - mountPath: /var/lib/containerd-nydus/
          name: containerd-nydus
        - mountPath: /var/lib/containerd/io.containerd.snapshotter.v1.tardev/
          name: containerd-tardev
      volumes:
        - hostPath:
            path: /opt/confidential-containers/
            type: DirectoryOrCreate
          name: confidential-containers-artifacts
        - hostPath:
            path: /etc/systemd/system/
            type: ""
          name: etc-systemd-system
        - hostPath:
            path: /etc/containerd/
            type: ""
          name: containerd-conf
        - hostPath:
            path: /usr/local/bin/
            type: ""
          name: local-bin
        - hostPath:
            path: /usr/bin/
            type: ""
          name: opt-bin
        - hostPath:
            path: /usr/sbin/
            type: ""
          name: opt-sbin
        - hostPath:
            path: /var/lib/containerd-nydus/
            type: ""
          name: containerd-nydus
        - hostPath:
            path: /var/lib/containerd/io.containerd.snapshotter.v1.tardev/
            type: ""
          name: containerd-tardev
    preInstall:
      image: quay.io/confidential-containers/reqs-payload
      volumeMounts:
        - mountPath: /opt/confidential-containers/
          name: confidential-containers-artifacts
        - mountPath: /etc/systemd/system/
          name: etc-systemd-system
        - mountPath: /etc/containerd/
          name: containerd-conf
        - mountPath: /usr/local/bin/
          name: local-bin
        - mountPath: /opt/snapshotter/bin/
          name: opt-bin
        - mountPath: /opt/snapshotter/sbin/
          name: opt-sbin
        - mountPath: /var/lib/containerd-nydus/
          name: containerd-nydus
        - mountPath: /var/lib/containerd/io.containerd.snapshotter.v1.tardev/
          name: containerd-tardev
      volumes:
        - hostPath:
            path: /opt/confidential-containers/
            type: DirectoryOrCreate
          name: confidential-containers-artifacts
        - hostPath:
            path: /etc/systemd/system/
            type: ""
          name: etc-systemd-system
        - hostPath:
            path: /etc/containerd/
            type: ""
          name: containerd-conf
        - hostPath:
            path: /usr/local/bin/
            type: ""
          name: local-bin
        - hostPath:
            path: /usr/bin/
            type: ""
          name: opt-bin
        - hostPath:
            path: /usr/sbin/
            type: ""
          name: opt-sbin
        - hostPath:
            path: /var/lib/containerd-nydus/
            type: ""
          name: containerd-nydus
        - hostPath:
            path: /var/lib/containerd/io.containerd.snapshotter.v1.tardev/
            type: ""
          name: containerd-tardev
    environmentVariables:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: "CONFIGURE_CC"
        value: "yes"
      - name: "DEBUG"
        value: "false"
      # If set to true, this will install the CoCo fork of the containerd,
      # the one allowing images to be pulled inside the guest and has patches
      # for handling GPU / VFIO, on the node
      # default: true
      - name: "INSTALL_COCO_CONTAINERD"
        value: "false"
      # If set to true, this will install the v1.7.0 release of containerd on the node.
      # default: false
      - name: "INSTALL_OFFICIAL_CONTAINERD"
        value: "true"
      # If set to true, this will install the CoCo fork of the containerd,
      # the one that has patches for handling GPU / VFIO, on the node
      # default: false
      - name: "INSTALL_VFIO_GPU_CONTAINERD"
        value: "false"
      # If set to true, this will install nydus-snapshotter and nydus-image
      # on the node
      # default: false
      - name: "INSTALL_NYDUS_SNAPSHOTTER"
        value: "false"
      # tardev 
      - name: "INSTALL_TARDEV_SNAPSHOTTER"
        value: "true"